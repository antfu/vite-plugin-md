// Vitest Snapshot v1

exports[`HappyDom's can be idempotent > HappyDom's conversion to lines remains consistent 1`] = `
[
  "",
  "<span class=\\"line\\"><span class=\\"token keyword\\">type</span> <span class=\\"token class-name\\">Valid</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'foo'</span> <span class=\\"token operator\\">|</span> <span class=\\"token string\\">'bar'</span> <span class=\\"token operator\\">|</span> <span class=\\"token string\\">'baz'</span></span>",
  "<span class=\\"line\\"><span class=\\"token keyword\\">const</span> testVariable<span class=\\"token operator\\">:</span> Valid <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'foo'</span></span>",
  "<span class=\\"line\\"><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">myFunc</span><span class=\\"token punctuation\\">(</span>name<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span></span>",
  "<span class=\\"line\\">    <span class=\\"token keyword\\">return</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token string\\">hello </span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>name<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token template-punctuation string\\">\`</span></span></span>",
  "<span class=\\"line\\"><span class=\\"token punctuation\\">}</span></span>",
  "",
]
`;
